package org.example.service;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;

import javax.annotation.PostConstruct;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.Map;
import java.util.Properties;
import java.util.concurrent.ConcurrentHashMap;

@Service
public class ClientIdService {

    @Value("${clientusermapping.file.path}")
    private String propertiesFilePath;

    private final Map<String, String> clientIdCache = new ConcurrentHashMap<>();
    private Properties properties = new Properties();

    @PostConstruct
    public void init() throws IOException {
        loadProperties();
    }

    public String getClientId(String userId) {
        return clientIdCache.computeIfAbsent(userId, this::loadClientIdFromProperties);
    }

    private String loadClientIdFromProperties(String userId) {
        String clientId = properties.getProperty(userId);
        if (clientId == null) {
            throw new IllegalArgumentException("Client ID not found for user: " + userId);
        }
        return clientId;
    }

    private void loadProperties() throws IOException {
        try (FileInputStream input = new FileInputStream(propertiesFilePath)) {
            properties.load(input);
        }
    }
}
