package org.example.service; // Adjust package if needed

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.core.env.Environment;
import org.springframework.stereotype.Service;

import java.util.Map;
import java.util.concurrent.ConcurrentHashMap;

@ConfigurationProperties(prefix = "clientusermapping")
@Service
public class ClientIdService {

    @Autowired
    private Environment env;

    private final Map<String, String> clientIdCache = new ConcurrentHashMap<>();

    public String getClientId(String userId) {
        return clientIdCache.computeIfAbsent(userId, this::loadClientIdFromEnvironment);
    }

    private String loadClientIdFromEnvironment(String userId) {
        String clientId = env.getProperty(userId);
        if (clientId == null) {
            // Throw the IllegalArgumentException when client ID is not found
            throw new IllegalArgumentException("Client ID not found for user: " + userId);
        }
        return clientId;
    }
}
