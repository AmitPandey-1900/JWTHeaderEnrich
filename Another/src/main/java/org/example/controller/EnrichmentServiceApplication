package org.example.controller;

import org.example.service.ClientIdService;
import org.example.service.JWTTokenService;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;

import javax.servlet.http.HttpServletRequest;

@SpringBootApplication(exclude = {DataSourceAutoConfiguration.class})
@RestController
@RequestMapping("/tradefeedr")
@ComponentScan(basePackages = "org.example")
public class EnrichmentServiceApplication {

    private final JWTTokenService jwtTokenService;
    private final ClientIdService clientIdService;
    private final RestTemplate restTemplate;

    @Value("${tradefeedr.base-url}")
    private String tradeFeederBaseUrl;

    public EnrichmentServiceApplication(JWTTokenService jwtTokenService, ClientIdService clientIdService, RestTemplate restTemplate) {
        this.jwtTokenService = jwtTokenService;
        this.clientIdService = clientIdService;
        this.restTemplate = restTemplate;
    }

    @PostMapping("/**")
    public ResponseEntity<String> sendToTradeFeeder(
            @RequestHeader("userId") String userId,
            @RequestBody String requestBody,
            HttpServletRequest request) {

        String fullUrl = request.getRequestURL().toString();

        System.out.println("Full URL ->: " + fullUrl + "body=" + requestBody + "header=" + userId);

        String redirectURL = replaceBaseUri(fullUrl);

        System.out.println("redirect URL is: " + redirectURL);

        String jwtToken = jwtTokenService.getJwtToken();
        System.out.print("jwtTokenUrl=" + jwtToken);

        String clientId = clientIdService.getClientId(userId);

        HttpHeaders headers = new HttpHeaders();
        headers.set("Authorization", "Bearer " + jwtToken);
        headers.set("userId", userId);
        headers.set("clientId", clientId);

        HttpEntity<String> entity = new HttpEntity<>(requestBody, headers);

        ResponseEntity<String> tradeFeederResponse = restTemplate.exchange(
                redirectURL,
                HttpMethod.POST,
                entity,
                String.class
        );

        return ResponseEntity.ok(tradeFeederResponse.getBody());
    }

    private String replaceBaseUri(String originalUri) {
        String pattern = "^(.*?)/tradefeedr/";
        return originalUri.replaceFirst(pattern, tradeFeederBaseUrl);
    }
}
